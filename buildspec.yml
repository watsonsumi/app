version: 0.2

env:
  variables:
    AWS_ACCOUNT_ID: "596059741778"
    CLUSTER: "demo"
    SERVICE: "appnode"
    IMAGE_REPO_NAME: "appnode"
    IMAGE_TAG: "latest"
    
phases:
  install:
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password | docker login --username AWS --password-stdin 596059741778.dkr.ecr.us-east-1.amazonaws.com/appnode
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image... 
      - docker build -t 596059741778.dkr.ecr.us-east-1.amazonaws.com/appnode:latest .
      - echo Copiando imagen de Docker a repositorio...
#       - docker tag appnode:latest 596059741778.dkr.ecr.us-east-1.amazonaws.com/appnode:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      #- docker push 596059741778.dkr.ecr.us-east-1.amazonaws.com/appnode:$IMAGE_TAG
      - docker push 596059741778.dkr.ecr.us-east-1.amazonaws.com/appnode:latest
      - printf '{"ImageURI":"%s"}' 596059741778.dkr.ecr.us-east-1.amazonaws.com/appnode:latest > imageDetail.json

      # - docker push 596059741778.dkr.ecr.us-east-1.amazonaws.com/appnode:imagelatest
      - aws ecs update-service --cluster $CLUSTER --service $SERVICE  --force-new-deployment


#       # - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
#       - printf '{"ImageURI":"596059741778.dkr.ecr.us-east-1.amazonaws.com/appnode:lates"}' > imageDetail.json
#       - printf '[{"name":"appnode","imageUri":"596059741778.dkr.ecr.us-east-1.amazonaws.com/appnode"}]' > imagedefinitions.json
#       - printf '{"ImageURI":"%s"}' 596059741778.dkr.ecr.us-east-1.amazonaws.com/appnode:latest  > imageDetail.json
      - sed -i 's/<APP_NAME>/'$IMAGE_REPO_NAME'/g' appspec.yml taskdef.json
      - sed -i 's/<SERVICE_PORT>/'$SERVICE_PORT'/g' appspec.yml taskdef.json
      - sed -i 's/<AWS_ACCOUNT_ID>/'$AWS_ACCOUNT_ID'/g' taskdef.json
      - sed -i 's/<MEMORY_RESV>/'$MEMORY_RESV'/g' taskdef.json
      - sed -i 's/<IMAGE_NAME>/'$AWS_ACCOUNT_ID'\.dkr\.ecr\.'$AWS_DEFAULT_REGION'\.amazonaws.com\/'$IMAGE_REPO_NAME'\:'$IMAGE_TAG'/g' taskdef.json
artifacts:
  files: 
    - imageDetail.json
    - appspec.yml
    - taskdef.json
    - imagedefinitions.json
